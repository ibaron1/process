âœ… Optimized SQL Query
sql
Copy
Edit
WITH RiskValues AS (
    SELECT 
        asof_dt,
        REPLACE(choiceID, ' (C)', '') AS CleanChoiceID,
        *
    FROM DM_InvMgmt_INT.dbo.arms_calc_risk_values
),
PortfolioLimits AS (
    SELECT
        memb_code,
        value,
        portfolio_limit_name,
        asof_dt,
        p_end_dt
    FROM dbo.portfolio_limit
    WHERE value <> 9999
),
FilteredLimits AS (
    SELECT *
    FROM PortfolioLimits
    WHERE asof_dt <= GETDATE() AND p_end_dt > GETDATE()
),
BenchmarkData AS (
    SELECT 
        asof_dt,
        choiceID,
        spread_pc1,
        spread_te,
        index_spread_te,
        index_spread_pc1,
        unified_spread_te,
        unified_mpc1
    FROM DM_InvMgmt_INT.dbo.arms_calc_risk_values
    WHERE calc_type = 'BMRK'
),
PortBeta AS (
    SELECT 
        a1.asof_dt,
        REPLACE(a1.choiceID, ' (C)', '') AS CleanChoiceID,
        ISNULL(CASE WHEN a2.spread_pc1 = 0 THEN 0 ELSE a1.spread_pc1 * 100.0 / a2.spread_pc1 END, 0) AS spc1_beta,
        ISNULL(CASE WHEN a2.spread_te = 0 THEN 0 ELSE a1.spread_te * 100.0 / a2.spread_te END, 0) AS oldspdte_beta,
        ISNULL(CASE WHEN a2.index_spread_te = 0 THEN 0 ELSE a1.index_spread_te * 100.0 / a2.index_spread_te END, 0) AS idxspdte_beta,
        ISNULL(CASE WHEN a2.index_spread_pc1 = 0 THEN 0 ELSE a1.index_spread_pc1 * 100.0 / a2.index_spread_pc1 END, 0) AS idxspc1_beta,
        ISNULL(CASE WHEN a2.unified_spread_te = 0 THEN 0 ELSE a1.unified_spread_te * 100.0 / a2.unified_spread_te END, 0) AS spdte_beta,
        ISNULL(CASE WHEN a2.unified_mpc1 = 0 THEN 0 ELSE a1.unified_mpc1 * 100.0 / a2.unified_mpc1 END, 0) AS mpc1_beta
    FROM DM_InvMgmt_INT.dbo.arms_calc_risk_values a1
    INNER JOIN BenchmarkData a2
        ON a1.asof_dt = a2.asof_dt AND a1.choiceID = a2.choiceID
    WHERE a1.calc_type = 'PORT'
      AND a1.asof_dt >= DATEADD(YEAR, -10, GETDATE())
),
StdRiskBudgetCTE AS (
    SELECT DISTINCT
        cm.comp_code,
        pl.value AS budget,
        'TRUE' AS StdRiskBudget
    FROM dbo.portfolio_limit pl
    INNER JOIN dbo.composite_member cm ON pl.memb_code = cm.memb_code
    INNER JOIN dbo.composite c ON cm.comp_code = c.comp_code
    INNER JOIN (
        SELECT memb_code
        FROM dbo.portfolio_limit
        WHERE portfolio_limit_name = 'StandardRiskBudget'
          AND p_end_dt = '9999-12-31'
          AND value = 1
    ) AS budget ON pl.memb_code = budget.memb_code
    WHERE pl.portfolio_limit_name = 'TargetTE'
      AND pl.p_end_dt = '9999-12-31'
      AND c.group_flag LIKE '%Z%'
)
SELECT 
    rv.asof_dt,
    rv.CleanChoiceID AS choiceID,
    rv.calc_type,
    rv.spread_pc1,
    rv.spread_te,
    rv.curve_te,
    rv.curve_pc1,
    rv.curve_pc2,
    rv.tips_curve_te,
    rv.curve_te_with_tips,
    rv.curr_te,
    rv.emg_shock,
    rv.industry_te,
    rv.issuer_te,
    rv.total_te,
    rv.total_sys_te,
    rv.total_non_sys_te,
    rv.e_te,
    rv.e_pc1,
    rv.e_pc2,
    rv.e_pc3,
    rv.e_sp_te,
    rv.e_fx_te,
    rv.e_cv_te,
    rv.[e_sys te],
    rv.e_non_sys_te,
    rv.jpy_curve_pc1,
    rv.jpy_curve_pc2,
    mv.usd_mv,
    rv.STSR,
    rv.unified_curve_te,
    rv.unified_curr_te,
    rv.unified_spread_te,
    rv.unified_cmdty_te,
    rv.unified_vol_te,
    rv.unified_residual_te,
    rv.unified_tot_sys_te,
    rv.unified_industry_te,
    rv.unified_issuer_te,
    rv.unified_tot_non_sys_te,
    rv.unified_tot_te,
    rv.unified_curve_pc1,
    rv.unified_curve_pc2,
    rv.unified_mpc1,
    rv.unified_mpc1_rate,
    rv.unified_mpc1_curr,
    rv.unified_mpc1_sprd,
    rv.unified_empc1,
    rv.unified_empc1_rate,
    rv.unified_empc1_curr,
    rv.unified_empc1_sprd,
    rv.unified_non_sys_te,
    -- Limits
    pl_std.value AS Std_Flag,
    pl_target.value AS Total_Threshold,
    pl_total.value AS Syst_Threshold,
    pl_fx.value AS FX_Threshold,
    pl_spread.value AS Spread_Threshold,
    pl_rates.value AS Rates_Threshold,
    pl_spc1.value AS SPC1_Threshold,
    dpgm.risk_mandate,
    srb.StdRiskBudget,
    b.spc1_beta,
    b.oldspdte_beta,
    b.idxspdte_beta,
    b.idxspc1_beta,
    b.spdte_beta,
    b.mpc1_beta
FROM RiskValues rv
INNER JOIN dn_portfolio_group_mandate dpgm
    ON rv.CleanChoiceID = dpgm.portfolio_name
LEFT JOIN arms_calc_mv mv
    ON rv.CleanChoiceID = mv.choiceID AND rv.asof_dt = mv.asof_dt
LEFT JOIN FilteredLimits pl_std
    ON rv.CleanChoiceID = pl_std.memb_code AND pl_std.portfolio_limit_name = 'StandardRiskBudget'
LEFT JOIN FilteredLimits pl_target
    ON rv.CleanChoiceID = pl_target.memb_code AND pl_target.portfolio_limit_name = 'TargetTE'
LEFT JOIN FilteredLimits pl_total
    ON rv.CleanChoiceID = pl_total.memb_code AND pl_total.portfolio_limit_name = 'TotalTE'
LEFT JOIN FilteredLimits pl_fx
    ON rv.CleanChoiceID = pl_fx.memb_code AND pl_fx.portfolio_limit_name = 'CurrencyTE'
LEFT JOIN FilteredLimits pl_spread
    ON rv.CleanChoiceID = pl_spread.memb_code AND pl_spread.portfolio_limit_name = 'SpreadTE'
LEFT JOIN FilteredLimits pl_rates
    ON rv.CleanChoiceID = pl_rates.memb_code AND pl_rates.portfolio_limit_name = 'CurveTE'
LEFT JOIN FilteredLimits pl_spc1
    ON rv.CleanChoiceID = pl_spc1.memb_code AND pl_spc1.portfolio_limit_name = 'SpreadPC1'
LEFT JOIN StdRiskBudgetCTE srb
    ON srb.comp_code = dpgm.comp_code AND srb.budget = pl_target.value
LEFT JOIN PortBeta b
    ON b.CleanChoiceID = rv.CleanChoiceID AND b.asof_dt = rv.asof_dt
WHERE rv.asof_dt >= DATEADD(YEAR, -10, GETDATE())
  AND dpgm.risk_mandate IS NOT NULL;
ðŸ›  Key Improvements
âœ… Replaces all repetitive REPLACE(choiceID, ' (C)', '') with CleanChoiceID.

âœ… Converts multiple subqueries for limits into a single reusable CTE.

âœ… Uses ISNULL(..., 0) defensively for division operations.

âœ… Uses WITH CTEs for better structure and readability.

âœ… Removes broken/ambiguous logic in your final join (composite, Temp8, etc.), assuming missing schema relations.