Here is the stored procedure for Tableau to page the results:

sql
Copy
Edit
CREATE OR ALTER PROCEDURE dbo.sp_GetPaged_PortfolioRiskFacts
    @PageNumber INT = 1,
    @PageSize INT = 100
AS
BEGIN
    SET NOCOUNT ON;

    WITH PagedResult AS (
        SELECT *
        FROM dbo.vw_PortfolioRiskFacts
    )
    SELECT *
    FROM PagedResult
    WHERE RowNum BETWEEN (@PageNumber - 1) * @PageSize + 1 AND @PageNumber * @PageSize;
END;

ðŸ“¥ Call Example from Tableau
Use Custom SQL or a Tableau parameterized query:

sql
Copy
Edit
EXEC dbo.sp_GetPaged_PortfolioRiskFacts @PageNumber = <ParamPage>, @PageSize = <ParamSize>

ðŸ§  Optional: Add Sorting Parameters
If you want Tableau to control sorting dynamically too, I can show you how to build a dynamic ORDER BY clause into the proc.

Would you like:

Index suggestions for performance?

Tableau dashboard-side integration help?

The helper views deployed too?

ðŸ“Œ Optional: Add Filtering for Tableau Parameters
If Tableau passes filters (e.g., for asof_dt, choiceID, or risk_mandate), you can extend the procedure like this:

sql

CREATE OR ALTER PROCEDURE dbo.sp_GetPaged_PortfolioRiskFacts
    @PageNumber INT = 1,
    @PageSize INT = 100,
    @ChoiceID VARCHAR(100) = NULL,
    @StartDate DATE = NULL,
    @EndDate DATE = NULL
AS
BEGIN
    SET NOCOUNT ON;

    WITH Filtered AS (
        SELECT *
        FROM dbo.vw_PortfolioRiskFacts
        WHERE
            (@ChoiceID IS NULL OR CleanChoiceID = @ChoiceID)
            AND (@StartDate IS NULL OR asof_dt >= @StartDate)
            AND (@EndDate IS NULL OR asof_dt <= @EndDate)
    ),
    PagedResult AS (
        SELECT *, ROW_NUMBER() OVER (ORDER BY asof_dt DESC, CleanChoiceID) AS RowNum
        FROM Filtered
    )
    SELECT *
    FROM PagedResult
    WHERE RowNum BETWEEN (@PageNumber - 1) * @PageSize + 1 AND @PageNumber * @PageSize
    ORDER BY RowNum;
END;


ðŸ“¥ Tableau Usage
In Tableau's Custom SQL or a parameterized call:

sql
Copy
Edit
EXEC dbo.sp_GetPaged_PortfolioRiskFacts
     @PageNumber = <ParamPage>,
     @PageSize = <ParamSize>,
     @ChoiceID = <ParamChoiceID>,
     @StartDate = <ParamStartDate>,
     @EndDate = <ParamEndDate>

Replace <ParamXYZ> with Tableau parameters or fixed values.

Would you like me to:

Add dynamic sorting (e.g., sort by any column)?

Generate the vw_ActiveLimits and vw_PortBeta views too?

Give index recommendations for the tables/views?


I've created a stored procedure sp_GetPaged_PortfolioRiskFacts that supports pagination for Tableau, with optional filters for ChoiceID, StartDate, and EndDate. You can call it like this:

sql
Copy
Edit
EXEC dbo.sp_GetPaged_PortfolioRiskFacts 
    @PageNumber = 2, 
    @PageSize = 100, 
    @ChoiceID = 'ABC123', 
    @StartDate = '2021-01-01', 
    @EndDate = '2024-12-31';

Let me know if you want a companion count procedure for total rows or need filtering on other columns.

CREATE OR ALTER PROCEDURE dbo.sp_GetPagedAndCount_PortfolioRiskFacts
    @PageNumber INT = 1,
    @PageSize INT = 100,
    @ChoiceID VARCHAR(100) = NULL,
    @StartDate DATE = NULL,
    @EndDate DATE = NULL
AS
BEGIN
    SET NOCOUNT ON;

    WITH Filtered AS (
        SELECT *
        FROM dbo.vw_PortfolioRiskFacts
        WHERE
            (@ChoiceID IS NULL OR CleanChoiceID = @ChoiceID)
            AND (@StartDate IS NULL OR asof_dt >= @StartDate)
            AND (@EndDate IS NULL OR asof_dt <= @EndDate)
    ),
    PagedResult AS (
        SELECT *, ROW_NUMBER() OVER (ORDER BY asof_dt DESC, CleanChoiceID) AS RowNum
        FROM Filtered
    )
    -- First result set: paged data
    SELECT *
    FROM PagedResult
    WHERE RowNum BETWEEN (@PageNumber - 1) * @PageSize + 1 AND @PageNumber * @PageSize
    ORDER BY RowNum;

    -- Second result set: total row count
    SELECT COUNT(*) AS TotalRows
    FROM Filtered;
END;

1. Tableau
Tableau natively does not support multiple result sets from a single stored procedure call. Only the first result set will be imported.

Workarounds:

Option A: Use two separate procedures â€” one for paging, one for total count, and call them separately in Tableau as separate data sources or queries. Then combine or calculate pages in Tableau itself.



















